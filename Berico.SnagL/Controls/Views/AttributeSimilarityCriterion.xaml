<UserControl x:Class="Berico.SnagL.Infrastructure.Controls.AttributeSimilarityCriterion"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.SL4"
    xmlns:convertors="clr-namespace:Berico.Common.UI.Converters;assembly=Berico.Common"             
    xmlns:berico="clr-namespace:Berico.Windows.Controls;assembly=Berico.Windows.Controls"      
	xmlns:System="clr-namespace:System;assembly=mscorlib"             
    xmlns:ui="clr-namespace:Berico.SnagL.UI"  
    ui:VisualStates.CurrentState="{Binding CurrentState}"             
    mc:Ignorable="d"
    d:DesignWidth="300"
    Height="Auto">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="LostFocus">
            <cmd:EventToCommand Command="{Binding LostFocusCommand}" PassEventArgsToCommand="False"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="GotFocus">
            <cmd:EventToCommand Command="{Binding GotFocusCommand}" PassEventArgsToCommand="False"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <UserControl.Resources>
        <convertors:VisibilityConverter x:Key="VisibilityConverter" />
        
        <SolidColorBrush x:Key="Positive" Color="#FF2F8C2F" />
        <SolidColorBrush x:Key="Negative" Color="#FF8C2F2F" />

        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25"/>
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                <Border Background="#FFDC000C" CornerRadius="2"/>
                <Border CornerRadius="2">
                    <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding ErrorMessage}" UseLayoutRounding="false"/>
                </Border>
            </Grid>
        </ControlTemplate>
        
        <Style x:Key="AddButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background_Pressed" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="Background" Stroke="{StaticResource Positive}" StrokeThickness="1" Fill="Gray" />
                            <Ellipse x:Name="Background_Over" Stroke="#FF749FD2" StrokeThickness="1" Opacity="0" Fill="#FFB1C7E0" />
                            <Ellipse x:Name="Background_Pressed" Margin="1" Opacity="0" Fill="#FF787878" />
                            <Ellipse x:Name="BackgroundGradient" Margin="1">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,1">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="-1"/>
                                                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="-0.15"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FCFFFFFF"/>
                                        <GradientStop Color="#4CFFFFFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Path x:Name="PlusSign" Margin="4" Stretch="Fill" Fill="#FFFFFFFF" Stroke="{StaticResource Positive}" Data="F1 M 34.125,2L 66.125,2L 66.125,34L 98,34L 98,66L 66.125,66L 66.125,97.875L 34.125,97.875L 34.125,66L 1.99997,66L 1.99997,34L 34.125,34L 34.125,2 Z " Visibility="Visible"/>
                            <!--<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>-->
                            <Ellipse x:Name="DisabledVisual" Visibility="Collapsed" Opacity=".55" Stroke="#FFA3AEB9" Fill="White"/>
                            <Ellipse x:Name="FocusVisual" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" IsHitTestVisible="false" Opacity="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RemoveButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background_Pressed" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="Background" Stroke="{StaticResource Negative}" StrokeThickness="1" Fill="Gray" />
                            <Ellipse x:Name="Background_Over" Stroke="#FF749FD2" StrokeThickness="1" Opacity="0" Fill="#FFB1C7E0" />
                            <Ellipse x:Name="Background_Pressed" Margin="1" Opacity="0" Fill="#FF787878" />
                            <Ellipse x:Name="BackgroundGradient" Margin="1">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,1">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="-1"/>
                                                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="-0.15"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FCFFFFFF"/>
                                        <GradientStop Color="#4CFFFFFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Rectangle x:Name="MinusSign" Height="8" Margin="5,0,5,0" Stretch="Fill" Fill="#FFFFFFFF" Stroke="{StaticResource Negative}" Visibility="Visible"/>
                            <!--<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>-->
                            <Ellipse x:Name="DisabledVisual" Visibility="Collapsed" Opacity=".55" Stroke="#FFA3AEB9" Fill="White"/>
                            <Ellipse x:Name="FocusVisual" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" IsHitTestVisible="false" Opacity="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>        
    </UserControl.Resources>
    
    <Grid x:Name="LayoutRoot">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="00:00:00" To="Disabled"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ActivityStates">
                <VisualState x:Name="Inactive">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RemoveButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="InactiveVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>                        
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Active">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RemoveButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="InactiveVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>                     
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="SimpleFocused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="SimpleUnfocused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>                    
                </VisualState>
                <VisualState x:Name="AdvancedFocused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="AdvancedUnfocused">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SimpleSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>                        
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>                        
                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdvancedSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>                
            </VisualStateGroup>            
        </VisualStateManager.VisualStateGroups>
        
        <Border BorderBrush="#FFA5A5A5" BorderThickness="1">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFFFFF"/>
                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                    <GradientStop Color="#FFE0E0E0" Offset="0.49"/>
                    <GradientStop Color="#FFE0E0E1" Offset="0.50"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <!-- Button to add this criterion -->
                <Button x:Name="AddButton" Grid.Column="0" Height="25" Width="25" Style="{StaticResource AddButtonStyle}" VerticalAlignment="Top" Visibility="Visible">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cmd:EventToCommand Command="{Binding AddButtonClickedCommand}" PassEventArgsToCommand="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ToolTipService.ToolTip>
                        <ToolTip Content="Add Criterion:  Press to add a new attribute similarity critieron" />
                    </ToolTipService.ToolTip>
                </Button>

                <!-- Button to remove this criterion -->
                <Button x:Name="RemoveButton" Grid.Column="0" Height="25" Width="25" Style="{StaticResource RemoveButtonStyle}" VerticalAlignment="Top" Visibility="Collapsed">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cmd:EventToCommand Command="{Binding RemoveButtonClickedCommand}" PassEventArgsToCommand="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ToolTipService.ToolTip>
                        <ToolTip Content="Remove Criterion:  Press to remove this attribute similarity critieron" />
                    </ToolTipService.ToolTip>                    
                </Button>

                <!-- Tempalte shown when control is inactive -->
                <Grid x:Name="InactiveVisual" Grid.Column="1" Visibility="Visible">
                    <TextBlock Text="Add New Similarity Criterion" VerticalAlignment="Center" FontWeight="Bold" Opacity=".5" />
                </Grid>

                <!-- Simple Unselected Template -->
                <Grid x:Name="SimpleUnselected" Grid.Column="1" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding SelectedValue, ElementName=SimpleAttributeList, FallbackValue='No Attribute Selected'}" VerticalAlignment="Center" FontWeight="Bold" />
                    <Ellipse Grid.Column="1" Height="25" Width="25" Fill="Black" />
                </Grid>

                <!-- SimpleSelected Template -->
                <Grid x:Name="SimpleSelected" Grid.Column="1" Margin="0,2,2,0"  Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />                        
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!-- Attribute List -->
                    <TextBlock Text="Target Attribute" Grid.Row="0" />
                    <ComboBox x:Name="SimpleAttributeList" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Height="25" Margin="5,0,1,0" ItemsSource="{Binding Parent.Attributes}" SelectedValue="{Binding SelectedAttribute, Mode=TwoWay}" />
                    <!-- Measure Type Selection -->
                    <RadioButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Exact  " Margin="5,2,0,2" IsChecked="{Binding UseExactSimilarity, Mode=TwoWay, FallbackValue=true}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Perform clustering based on an exact match algorithm" />
                        </ToolTipService.ToolTip>
                    </RadioButton>
                    <RadioButton Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Similar" Margin="0,2,0,2" >
                        <ToolTipService.ToolTip>
                            <ToolTip Content="{Binding SimilarityToolTip}" />
                        </ToolTipService.ToolTip>
                    </RadioButton>
                </Grid>

                <!-- Advanced Unselected Template -->
                <Grid x:Name="AdvancedUnselected" Grid.Column="1" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />                        
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding SelectedValue, ElementName=AdvancedAttributeList, FallbackValue='No Attribute Selected'}" VerticalAlignment="Center" FontWeight="Bold" />
                    <Ellipse Grid.Column="1" Height="25" Width="25" Fill="Black" />
                    <TextBlock Grid.Column="1" Foreground="White" IsHitTestVisible="False" Text="{Binding Value, ElementName=WeightSlider, StringFormat=\{0:0\}%}" FontSize="8" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center" />
                    <Ellipse Grid.Column="2" Height="25" Width="25" Fill="Black"  />                    
                </Grid>

                <!-- AdvancedSelected Template -->
                <Grid x:Name="AdvancedSelected" Grid.Column="1" Margin="0,2,2,0"  Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />                        
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />                        
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Attribute List -->
                    <TextBlock Text="Target Attribute" Grid.Row="0" />
                    <ComboBox x:Name="AdvancedAttributeList" Grid.Row="1" Height="25" Margin="5,0,1,1" ItemsSource="{Binding Parent.Attributes}" SelectedValue="{Binding SelectedAttribute, Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <cmd:EventToCommand Command="{Binding SelectedAttributeChangedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    
                    <!-- Similarity Measures List -->
                    <TextBlock Text="Similarity Measure" Grid.Row="2" />
                    <ComboBox Grid.Row="3" Height="25" Margin="5,0,1,1" ItemsSource="{Binding AvailableSimilarityMeasures}" SelectedItem="{Binding SelectedSimilarityMeasure, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding Description}" />
                                    </ToolTipService.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    
                    <!-- Weight Slider -->
                    <TextBlock Text="Weight" Grid.Row="4" />
                    <berico:Slider x:Name="WeightSlider" Grid.Row="5" Minimum="1" Maximum="100" SmallChange="1" LargeChange="10" Margin="5,10,2,10" Value="{Binding Weight, Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <cmd:EventToCommand Command="{Binding WeightChangedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </berico:Slider>
                </Grid>
            </Grid>
        </Border>
        
        <!-- The validation element, borrowed from the standard control template -->
        <Border x:Name="ValidationVisual" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="{Binding IsValid, Converter={StaticResource VisibilityConverter}, ConverterParameter='true', FallbackValue=Collapsed}">
            <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                    <ToolTip.Triggers>
                        <EventTrigger RoutedEvent="Canvas.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <System:Boolean>true</System:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToolTip.Triggers>
                </ToolTip>
            </ToolTipService.ToolTip>
            <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
            </Grid>
        </Border>
    </Grid>
    
</UserControl>
